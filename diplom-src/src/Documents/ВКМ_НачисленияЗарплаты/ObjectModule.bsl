
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроверитьУстановленныеОклады(Отказ);
	
	СформироватьОсновныеНачисления();
	
	СформироватьДополнительныеНачисления();
	
	РассчитатьОклад();
	
	РассчитатьОтпуск();
	
	РассчитатьПроцентОтРабот();
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьОсновныеНачисления()
	
	ДобавитьЗаписиПоОкладу();
	
	ДобавитьЗаписиПоОтпуску();
	
	//В случае необходимости
	//ДобавитьСторноЗаписи();
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
КонецПроцедуры

Процедура СформироватьДополнительныеНачисления()
	
	ДобавитьЗаписиПроцентОтРабот();
	
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
КонецПроцедуры

Процедура ДобавитьЗаписиПоОкладу()
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВКМ_ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	НайденныеСтроки = ВКМ_ОсновныеНачисления.НайтиСтроки(Отбор);
	Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНачалаОклада = НачалоМесяца(ВКМ_ОсновныеНачисления[0].ВКМ_ДатаНачала);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияЗарплата.ВКМ_Сотрудник КАК ВКМ_Сотрудник,
	|	ВКМ_ОсновныеНачисленияЗарплата.ВКМ_Подразделение КАК ВКМ_Подразделение,
	|	ВКМ_ОсновныеНачисленияЗарплата.ВКМ_ВидРасчета КАК ВКМ_ВидРасчета,
	|	ВКМ_ОсновныеНачисленияЗарплата.ВКМ_ДатаНачала КАК ВКМ_ДатаНачала,
	|	ВКМ_ОсновныеНачисленияЗарплата.ВКМ_ДатаОкончания КАК ВКМ_ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ДанныеДокумента
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисленияЗарплата
	|ГДЕ
	|	ВКМ_ОсновныеНачисленияЗарплата.Ссылка = &Ссылка
	|	И ВКМ_ОсновныеНачисленияЗарплата.ВКМ_ВидРасчета = &ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период КАК Период,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник КАК ВКМ_Сотрудник,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Оклад КАК ВКМ_Оклад
	|ПОМЕСТИТЬ ВТ_ДанныеОкладов
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&НачалоПериода, ВКМ_Сотрудник В
	|		(ВЫБРАТЬ
	|			ВТ_ДанныеДокумента.ВКМ_Сотрудник КАК ВКМ_Сотрудник
	|		ИЗ
	|			ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДокумента.ВКМ_Сотрудник КАК ВКМ_Сотрудник,
	|	ВТ_ДанныеДокумента.ВКМ_Подразделение КАК ВКМ_Подразделение,
	|	ВТ_ДанныеДокумента.ВКМ_ВидРасчета КАК ВидРасчета,
	|	ВТ_ДанныеДокумента.ВКМ_ДатаНачала КАК ПериодДействияНачало,
	|	ВТ_ДанныеДокумента.ВКМ_ДатаОкончания КАК ПериодДействияКонец,
	|	ЕстьNULL(ВТ_ДанныеОкладов.ВКМ_Оклад, 0) КАК ВКМ_Показатель
	|ИЗ
	|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеОкладов КАК ВТ_ДанныеОкладов
	|		ПО ВТ_ДанныеДокумента.ВКМ_Сотрудник = ВТ_ДанныеОкладов.ВКМ_Сотрудник";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачалаОклада);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = ВКМ_ПериодРегистрации;
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
	КонецЦикла;
		
КонецПроцедуры

Процедура ДобавитьЗаписиПоОтпуску()
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВКМ_ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	НайденныеСтроки = ВКМ_ОсновныеНачисления.НайтиСтроки(Отбор);
	Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из НайденныеСтроки Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = ВКМ_ПериодРегистрации;
		Движение.ВКМ_Подразделение = Строка.ВКМ_Подразделение;
		Движение.ВКМ_Сотрудник = Строка.ВКМ_Сотрудник;
		Движение.ВидРасчета = Строка.ВКМ_ВидРасчета;
		Движение.ПериодДействияНачало = Строка.ВКМ_ДатаНачала;
		Движение.ПериодДействияКонец = Строка.ВКМ_ДатаОкончания;
		Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Строка.ВКМ_ДатаНачала, -12));
		Движение.БазовыйПериодКонец =  КонецМесяца(ДобавитьМесяц(Строка.ВКМ_ДатаНачала, -1));
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьЗаписиПроцентОтРабот()
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВКМ_ВидРасчета", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПроцентОтРабот);
	
	НайденныеСтроки = ВКМ_ДополнительныеНачисления.НайтиСтроки(Отбор);
	Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из НайденныеСтроки Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ПериодРегистрации = ВКМ_ПериодРегистрации;
		Движение.ВКМ_Подразделение = Строка.ВКМ_Подразделение;
		Движение.ВКМ_Сотрудник = Строка.ВКМ_Сотрудник;
		Движение.ВидРасчета = Строка.ВКМ_ВидРасчета;
		Движение.ПериодДействияНачало = НачалоМесяца(ВКМ_ПериодРегистрации);
		Движение.ПериодДействияКонец = КонецМесяца(ВКМ_ПериодРегистрации);
	КонецЦикла;
	
Конецпроцедуры

Процедура РассчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеФактическийПериодДействия КАК Факт,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеПериодДействия КАК План
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор
	|	И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Если Выборка.План <> 0 Тогда
			Движение.ВКМ_Результат = Движение.ВКМ_Показатель * Выборка.Факт / Выборка.План;
		КонецЕсли;
		Движение.ВКМ_ЧасовОтработано = Выборка.Факт;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьОтпуск()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.НомерСтроки,
	|	ЕстьNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.ВКМ_РезультатБаза, 0) КАК БазаДоп,
	|	ЕстьNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_РезультатБаза, 0) КАК БазаОсн,
	|	ЕстьNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_ЧасовОтработаноБаза, 0) КАК БазаЧасы,
	|	ЕстьNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеФактическийПериодДействия, 0) КАК Факт,
	|	ЕстьNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеПериодДействия, 0) КАК План
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения,,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор
	|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";
	Измерения = Новый Массив;
	Измерения.Добавить("ВКМ_Сотрудник");
	Измерения.Добавить("ВКМ_Подразделение");
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Если Выборка.План <> 0 Тогда
			Движение.ВКМ_Результат = (Выборка.БазаОсн + Выборка.БазаДоп) * Выборка.Факт / Выборка.БазаЧасы;
		КонецЕсли;
		Движение.ВКМ_ЧасовОтработано = Выборка.Факт;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьПроцентОтРабот()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ДополнительныеНачисления.НомерСтроки,
	|	СУММА(ВКМ_ВыполненныеСотрудникомРаботыОбороты.ВКМ_ЧасовКОплатеОборот) КАК ВКМ_ЧасовКОплате,
	|	СУММА(ВКМ_ВыполненныеСотрудникомРаботыОбороты.ВКМ_СуммаКОплатеОборот) КАК ВКМ_СуммаКОплате
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&ДатаНачала, &ДатаОкончания,
	|			Период,) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	|		ПО ВКМ_ДополнительныеНачисления.ВКМ_Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.ВКМ_Сотрудник
	|ГДЕ
	|	ВКМ_ДополнительныеНачисления.Регистратор = &Регистратор
	|	И ВКМ_ДополнительныеНачисления.ВидРасчета = &ВидРасчета
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ДополнительныеНачисления.НомерСтроки";
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПроцентОтРабот);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(ВКМ_ПериодРегистрации));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ВКМ_ПериодРегистрации));
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.ВКМ_Результат = ВыборкаДетальныеЗаписи.ВКМ_СуммаКОплате;
		Движение.ВКМ_Показатель = ВыборкаДетальныеЗаписи.ВКМ_ЧасовКОплате;
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура ПроверитьУстановленныеОклады(Отказ)
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВКМ_ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	НайденныеСтроки = ВКМ_ОсновныеНачисления.НайтиСтроки(Отбор);
	Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНачалаОклада = НачалоМесяца(ВКМ_ОсновныеНачисления[0].ВКМ_ДатаНачала);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияЗарплата.ВКМ_Сотрудник КАК ВКМ_Сотрудник,
	|	МИНИМУМ(ВКМ_ОсновныеНачисленияЗарплата.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_ДанныеДокумента
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисленияЗарплата
	|ГДЕ
	|	ВКМ_ОсновныеНачисленияЗарплата.Ссылка = &Ссылка
	|	И ВКМ_ОсновныеНачисленияЗарплата.ВКМ_ВидРасчета = &ВидРасчета
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисленияЗарплата.ВКМ_Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДокумента.НомерСтроки,
	|	ВТ_ДанныеДокумента.ВКМ_Сотрудник КАК Сотрудник
	|ИЗ
	|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&НачалоПериода, ВКМ_Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТ_ДанныеДокумента.ВКМ_Сотрудник КАК ВКМ_Сотрудник
	|			ИЗ
	|				ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВТ_ДанныеДокумента.ВКМ_Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник
	|ГДЕ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Оклад ЕСТЬ NULL";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачалаОклада);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстОшибки = СтрШаблон("На строке %1 не указан оклад у сотрудника %2", Выборка.НомерСтроки, Выборка.Сотрудник);
		ТекстПоля = СтрШаблон("ВКМ_ОсновныеНачисления[%1].ВКМ_Сотрудник", Выборка.НомерСтроки - 1);;
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, ТекстПоля, , );
		Отказ = Истина;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли