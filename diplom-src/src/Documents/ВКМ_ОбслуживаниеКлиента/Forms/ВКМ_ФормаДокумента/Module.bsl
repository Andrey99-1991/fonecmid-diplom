
#Область ОписаниеПеременных

&НаКлиенте
Перем СтруктураДляТелеграма;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СтруктураДляТелеграма = Новый Структура;
	Если Параметры.Ключ.Пустая() Тогда
		ТекстСообщения = "Создан документ %1, назначенный специалист %2";
		СтруктураДляТелеграма.Вставить("ТекстСообщения", ТекстСообщения);
		СтруктураДляТелеграма.Вставить("ЭтоНовый", Истина);
	Иначе
		ТекстСообщения = ПолучитьТекстИзменения();
		Если ЗначениеЗаполнено(ТекстСообщения) Тогда
			СтруктураДляТелеграма.Вставить("ТекстСообщения", ТекстСообщения);
			СтруктураДляТелеграма.Вставить("ЭтоНовый", Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	Если ЗначениеЗаполнено(СтруктураДляТелеграма.ТекстСообщения) Тогда
		Если СтруктураДляТелеграма.ЭтоНовый Тогда
			ТекстСообщенияТелеграм = СтрШаблон(СтруктураДляТелеграма.ТекстСообщения, Объект.Ссылка, Объект.ВКМ_Специалист);
		Иначе
			 ТекстСообщенияТелеграм = СтруктураДляТелеграма.ТекстСообщения;
		КонецЕсли; 
		ЗаписатьСообщениеВСправочник(ТекстСообщенияТелеграм);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаСервере
Процедура ЗаписатьСообщениеВСправочник(ТекстСообщенияТелеграм) 
	
	ВКМ_Телеграмм.ЗаписатьСообщениеВСправочник(ТекстСообщенияТелеграм, Объект.Ссылка);

КонецПроцедуры

&НаСервере
Функция ПолучитьТекстИзменения()
	
	ТекстСообщения = "";
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.Дата,
	|	ВКМ_ОбслуживаниеКлиента.ВКМ_Специалист,
	|	ВКМ_ОбслуживаниеКлиента.ВКМ_ВремяНачалаРабот,
	|	ВКМ_ОбслуживаниеКлиента.ВКМ_ВремяОкончанияРабот,
	|	ВКМ_ОбслуживаниеКлиента.ВКМ_ДатаПроведенияРабот
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Строки = Новый Массив;
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Дата <> Объект.Дата Тогда
				Строки.Добавить(СтрШаблон("Дата: %1;", Объект.Дата));
			КонецЕсли;
			Если ВыборкаДетальныеЗаписи.ВКМ_Специалист <> Объект.ВКМ_Специалист Тогда
				Строки.Добавить(СтрШаблон("Специалист: %1;", Объект.ВКМ_Специалист));
			КонецЕсли;
			Если ВыборкаДетальныеЗаписи.ВКМ_ДатаПроведенияРабот <> Объект.ВКМ_ДатаПроведенияРабот Тогда
				Строки.Добавить(СтрШаблон("Дата проведения работ: %1;", Лев(Объект.ВКМ_ДатаПроведенияРабот, 10)));
			КонецЕсли;
			Если ВыборкаДетальныеЗаписи.ВКМ_ВремяНачалаРабот <> Объект.ВКМ_ВремяНачалаРабот Тогда
				Строки.Добавить(СтрШаблон("Время начала работ: %1;", Прав(Объект.ВКМ_ВремяНачалаРабот, 8)));
			КонецЕсли;
			Если ВыборкаДетальныеЗаписи.ВКМ_ВремяОкончанияРабот <> Объект.ВКМ_ВремяОкончанияРабот Тогда
				Строки.Добавить(СтрШаблон("Время окончания работ: %1;", Прав(Объект.ВКМ_ВремяОкончанияРабот, 8)));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Строки.Количество() > 1 Тогда
		ЗаголовокСообщения = СтрШаблон("В документе %1 внесены изменения:", Объект.Ссылка);	
	Иначе
		ЗаголовокСообщения = СтрШаблон("В документе %1 внесено изменение:", Объект.Ссылка);
	КонецЕсли;
	
	Строки.Вставить(0, ЗаголовокСообщения);
	ТекстСообщения = СтрСоединить(Строки, Символы.ПС);
		
	Возврат ТекстСообщения;

КонецФункции

#КонецОбласти
