
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДополнительныеНачисления();
	
	СформироватьУдержания();
	
	РассчитатьПроцентНДФЛ();
	
	СформироватьВзаиморасчетыССотрудниками();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДополнительныеНачисления()
	
	ДобавитьЗаписиФиксированнойПремии();
	
	Движения.ВКМ_ДополнительныеНачисления.Записать();	
	
КонецПроцедуры

Процедура СформироватьУдержания()
	
	ДобавитьЗаписиПроцентНДФЛ();
	
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура ДобавитьЗаписиФиксированнойПремии()
	
	Для Каждого Строка Из ВКМ_СписокСотрудников Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ПериодРегистрации = ВКМ_ПериодРегистрации;
		Движение.ВКМ_Подразделение = ВКМ_Подразделение;
		Движение.ВКМ_Сотрудник = Строка.ВКМ_Сотрудник;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.Премия;
		Движение.ПериодДействияНачало = НачалоМесяца(ВКМ_ПериодРегистрации);
		Движение.ПериодДействияКонец = КонецМесяца(ВКМ_ПериодРегистрации);
		Движение.ВКМ_Результат = Строка.ВКМ_СуммаПремии;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьЗаписиПроцентНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.ВКМ_Сотрудник,
	|	ВКМ_НачислениеФиксированнойПремии.ВКМ_Подразделение
	|ИЗ
	|	Документ.ВКМ_НачислениеФиксированнойПремии.ВКМ_СписокСотрудников КАК
	|		ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_НачислениеФиксированнойПремии КАК ВКМ_НачислениеФиксированнойПремии
	|		ПО ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.Ссылка = ВКМ_НачислениеФиксированнойПремии.Ссылка
	|ГДЕ
	|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.ПроцентНДФЛ;
		Движение.ПериодРегистрации = ВКМ_ПериодРегистрации;
		Движение.БазовыйПериодНачало = НачалоМесяца(ВКМ_ПериодРегистрации);
		Движение.БазовыйПериодКонец = КонецМесяца(ВКМ_ПериодРегистрации);
		Движение.ПериодДействияНачало = НачалоМесяца(ВКМ_ПериодРегистрации);
		Движение.ПериодДействияКонец = КонецМесяца(ВКМ_ПериодРегистрации);
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьПроцентНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|
	|	ВКМ_Удержания.НомерСтроки,
	|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.ВКМ_РезультатБаза, 0) КАК БазаДоп,
	|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, &Разрезы,
	|			Регистратор = &Ссылка) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Ссылка
	|	И ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанные.НомерСтроки КАК НомерСтроки,
	|	СУММА(ВТДанные.БазаДоп) КАК БазаДоп
	|ИЗ
	|	ВТДанные КАК ВТДанные
	|СГРУППИРОВАТЬ ПО
	|	ВТДанные.НомерСтроки";
	
	Измерения = Новый Массив;
	Измерения.Добавить("ВКМ_Сотрудник");
	Измерения.Добавить("ВКМ_Подразделение");
	
	Разрезы = Новый Массив;
	Разрезы.Добавить("Регистратор");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Разрезы", Разрезы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Строка = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		
		База = Выборка.БазаДоп;
		Если База <> 0 Тогда
			Строка.ВКМ_Показатель = База;
			Строка.ВКМ_Результат = База * 13 / 100;
		КонецЕсли;
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать(, Истина);
	
КонецПроцедуры

Процедура СформироватьВзаиморасчетыССотрудниками()
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.ВКМ_Сотрудник КАК ВКМ_Сотрудник,
	|	ВКМ_НачислениеФиксированнойПремии.ВКМ_Подразделение КАК ВКМ_Подразделение,
	|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	Документ.ВКМ_НачислениеФиксированнойПремии.ВКМ_СписокСотрудников КАК
	|		ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_НачислениеФиксированнойПремии КАК ВКМ_НачислениеФиксированнойПремии
	|		ПО ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.Ссылка = ВКМ_НачислениеФиксированнойПремии.Ссылка
	|ГДЕ
	|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.ВКМ_Сотрудник,
	|	ВКМ_НачислениеФиксированнойПремии.ВКМ_Подразделение,
	|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Данные.ВКМ_Сотрудник,
	|	ВТ_Данные.ВКМ_Подразделение,
	|	СУММА(ЕСТЬNULL(ВКМ_ДополнительныеНачисления.ВКМ_Результат, 0)) КАК ДопНачисления,
	|	0 КАК Удержания
	|ПОМЕСТИТЬ ВТ_Взаиморасчеты
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|		ПО ВТ_Данные.ВКМ_Сотрудник = ВКМ_ДополнительныеНачисления.ВКМ_Сотрудник
	|		И ВТ_Данные.ВКМ_Подразделение = ВКМ_ДополнительныеНачисления.ВКМ_Подразделение
	|		И ВТ_Данные.Ссылка = ВКМ_ДополнительныеНачисления.Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.ВКМ_Сотрудник,
	|	ВТ_Данные.ВКМ_Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Данные.ВКМ_Сотрудник,
	|	ВТ_Данные.ВКМ_Подразделение,
	|	0,
	|	СУММА(ЕСТЬNULL(ВКМ_Удержания.ВКМ_Результат, 0))
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ПО ВТ_Данные.ВКМ_Сотрудник = ВКМ_Удержания.ВКМ_Сотрудник
	|		И ВТ_Данные.ВКМ_Подразделение = ВКМ_Удержания.ВКМ_Подразделение
	|		И ВТ_Данные.Ссылка = ВКМ_Удержания.Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.ВКМ_Сотрудник,
	|	ВТ_Данные.ВКМ_Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Взаиморасчеты.ВКМ_Сотрудник КАК ВКМ_Сотрудник,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Взаиморасчеты.ВКМ_Подразделение) КАК ВКМ_Подразделение,
	|	СУММА(ВТ_Взаиморасчеты.ДопНачисления) КАК ДопНачисления,
	|	СУММА(ВТ_Взаиморасчеты.Удержания) КАК Удержания
	|ИЗ
	|	ВТ_Взаиморасчеты КАК ВТ_Взаиморасчеты
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Взаиморасчеты.ВКМ_Сотрудник";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СуммаВзаиморасчетов = Выборка.ДопНачисления - Выборка.Удержания;
		Если СуммаВзаиморасчетов = 0 Тогда
			Продолжить;
		КонецЕсли;
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = ВКМ_ПериодРегистрации;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.ВКМ_Сотрудник = Выборка.ВКМ_Сотрудник;
		Движение.ВКМ_Сумма = СуммаВзаиморасчетов;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли